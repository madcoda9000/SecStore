class AuthSessionManager{constructor(n,t={}){this.options={refreshBuffer:30,warningTime:10,minWaitTime:60,showWarning:!0,logActivity:!0,debugLog:!1,...t},this.sessionTimeout=parseInt(n)||0,this.init()}debugLog(...n){this.options.debugLog}debugWarn(...n){this.options.debugLog}init(){const n=Math.max(this.sessionTimeout-this.options.refreshBuffer,this.options.minWaitTime),t=Math.max(n-this.options.warningTime,30);this.options.showWarning&&t<n&&setTimeout((()=>{}),1e3*t),setTimeout((()=>{this.performRefresh()}),1e3*n)}showWarning(n){const t=document.createElement("div");t.id="session-warning",t.className="alert alert-info alert-dismissible fade show position-fixed",t.style.cssText="\n            top: 20px;\n            left: 50%;\n            transform: translateX(-50%);\n            z-index: 9999;\n            min-width: 350px;\n            max-width: 90%;\n            text-align: center;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            border: none;\n        ",t.innerHTML=`\n            <div class="d-flex align-items-center justify-content-center">\n                <i class="bi bi-clock me-2"></i>\n                <span>Page refreshes in <strong><span id="session-countdown">${n}</span>s</strong> to maintain security</span>\n                <button type="button" class="btn-close ms-3" onclick="window.authSessionManager.dismissWarning()"></button>\n            </div>\n        `,document.body.appendChild(t),this.startCountdown(n),setTimeout((()=>{this.debugLog("üóëÔ∏è Auto-removing warning after countdown"),this.dismissWarning()}),1e3*n)}startCountdown(n){const t=document.getElementById("session-countdown");let s=n;const e=setInterval((()=>{s--,this.debugLog("‚è±Ô∏è Countdown:",s),t&&(t.textContent=s,s<=3&&(t.style.color="#dc3545")),s<=0&&clearInterval(e)}),1e3)}dismissWarning(){const n=document.getElementById("session-warning");n&&n.remove()}performRefresh(){setTimeout((()=>{window.location.reload(1)}),100)}}window.AuthSessionManager=AuthSessionManager;