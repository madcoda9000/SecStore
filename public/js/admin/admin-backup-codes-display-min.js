function loadBackupCodesInfo(e,t){fetch(`/admin/getUserBackupCodesInfo?id=${e}`,{method:"GET",headers:{"X-Requested-With":"XMLHttpRequest"}}).then((e=>e.json())).then((e=>{e.success?updateBackupCodesDisplay(t,e):(t.innerHTML='<i class="bi-exclamation-circle text-danger" data-bs-toggle="tooltip" title="Error loading info"></i>',initializeTooltips())})).catch((e=>{t.innerHTML='<i class="bi-exclamation-circle text-danger" data-bs-toggle="tooltip" title="Error loading info"></i>',initializeTooltips()}))}function updateBackupCodesDisplay(e,t){t.hasBackupCodes?0===t.remainingCodes?e.innerHTML='<i class="bi-exclamation-triangle-fill text-danger" data-bs-toggle="tooltip" title="All backup codes used (0 remaining)"></i>':t.remainingCodes<=3?e.innerHTML=`<i class="bi-exclamation-circle-fill text-warning" data-bs-toggle="tooltip" title="Low backup codes: ${t.remainingCodes} remaining"></i>`:e.innerHTML=`<i class="bi-check-circle-fill text-success" data-bs-toggle="tooltip" title="${t.remainingCodes} backup codes remaining"></i>`:e.innerHTML='<i class="bi-x-circle text-warning" data-bs-toggle="tooltip" title="No backup codes generated"></i>';const i=e.querySelector("i");i&&(0===t.remainingCodes||t.remainingCodes<=3)&&(i.style.cursor="pointer",i.classList.add("backup-reset-action"),i.setAttribute("data-user-id",t.userId),i.setAttribute("data-username",t.username)),initializeTooltips()}function initializeTooltips(){[].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map((function(e){const t=bootstrap.Tooltip.getInstance(e);return t&&t.dispose(),new bootstrap.Tooltip(e)}))}function resetUserBackupCodes(e,t){const i=document.getElementById("csrf_token").value,o=new FormData;o.append("id",e),o.append("csrf_token",i),t.innerHTML='<span class="spinner-border spinner-border-sm text-secondary" role="status"></span>',fetch("/admin/resetUserBackupCodes",{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:o}).then((e=>e.json())).then((i=>{i.success?(loadBackupCodesInfo(e,t),"function"==typeof showToast&&showToast(i.message||"Backup codes reset successfully","success","Success")):(t.innerHTML='<i class="bi-exclamation-circle text-danger" data-bs-toggle="tooltip" title="Reset failed"></i>',initializeTooltips(),"function"==typeof showToast&&showToast(i.message||"Error resetting backup codes","danger","Error"))})).catch((e=>{t.innerHTML='<i class="bi-exclamation-circle text-danger" data-bs-toggle="tooltip" title="Reset failed"></i>',initializeTooltips(),"function"==typeof showToast&&showToast("Error resetting backup codes","danger","Error")}))}window.loadAllBackupCodes=function(){[...document.querySelectorAll(".backup-codes-cell"),...document.querySelectorAll(".backup-codes-cell-mobile")].forEach((e=>{const t=e.getAttribute("data-user-id");t&&loadBackupCodesInfo(t,e)}))},document.addEventListener("DOMContentLoaded",(function(){window.loadAllBackupCodes(),document.addEventListener("click",(function(e){if(e.target.classList.contains("backup-reset-action")){const t=e.target.getAttribute("data-user-id"),i=e.target.getAttribute("data-username");confirm(`Reset backup codes for user "${i}"?\n\nThis will clear all existing backup codes. The user will need to regenerate new codes.`)&&resetUserBackupCodes(t,e.target.closest(".backup-codes-cell, .backup-codes-cell-mobile"))}}))}));