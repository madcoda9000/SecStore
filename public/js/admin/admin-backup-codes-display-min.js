document.addEventListener("DOMContentLoaded",(function(){const e=[...document.querySelectorAll(".backup-codes-cell"),...document.querySelectorAll(".backup-codes-cell-mobile")];function t(e,t){fetch(`/admin/getUserBackupCodesInfo?id=${e}`,{method:"GET",headers:{"X-Requested-With":"XMLHttpRequest"}}).then((e=>e.json())).then((e=>{e.success?function(e,t){t.hasBackupCodes?0===t.remainingCodes?e.innerHTML='<i class="bi-exclamation-triangle-fill text-danger" data-bs-toggle="tooltip" title="All backup codes used (0 remaining)"></i>':t.remainingCodes<=3?e.innerHTML=`<i class="bi-exclamation-circle-fill text-warning" data-bs-toggle="tooltip" title="Low backup codes: ${t.remainingCodes} remaining"></i>`:e.innerHTML=`<i class="bi-check-circle-fill text-success" data-bs-toggle="tooltip" title="${t.remainingCodes} backup codes remaining"></i>`:e.innerHTML='<i class="bi-x-circle text-warning" data-bs-toggle="tooltip" title="No backup codes generated"></i>';const o=e.querySelector("i");o&&(0===t.remainingCodes||t.remainingCodes<=3)&&(o.style.cursor="pointer",o.classList.add("backup-reset-action"),o.setAttribute("data-user-id",t.userId),o.setAttribute("data-username",t.username));s()}(t,e):(t.innerHTML='<i class="bi-exclamation-circle text-danger" data-bs-toggle="tooltip" title="Error loading info"></i>',s())})).catch((e=>{t.innerHTML='<i class="bi-exclamation-circle text-danger" data-bs-toggle="tooltip" title="Error loading info"></i>',s()}))}function s(){[].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]')).map((function(e){const t=bootstrap.Tooltip.getInstance(e);return t&&t.dispose(),new bootstrap.Tooltip(e)}))}0!==e.length&&(e.forEach((e=>{const s=e.getAttribute("data-user-id");s&&t(s,e)})),document.addEventListener("click",(function(e){if(e.target.classList.contains("backup-reset-action")){const o=e.target.getAttribute("data-user-id"),i=e.target.getAttribute("data-username");confirm(`Reset backup codes for user "${i}"?\n\nThis will clear all existing backup codes. The user will need to regenerate new codes.`)&&function(e,o){const i=document.getElementById("csrf_token").value,n=new FormData;n.append("id",e),n.append("csrf_token",i),o.innerHTML='<span class="spinner-border spinner-border-sm text-secondary" role="status"></span>',fetch("/admin/resetUserBackupCodes",{method:"POST",headers:{"X-Requested-With":"XMLHttpRequest"},body:n}).then((e=>e.json())).then((i=>{i.success?(t(e,o),"function"==typeof showToast&&showToast(i.message||"Backup codes reset successfully","success","Success")):(o.innerHTML='<i class="bi-exclamation-circle text-danger" data-bs-toggle="tooltip" title="Reset failed"></i>',s(),"function"==typeof showToast&&showToast(i.message||"Error resetting backup codes","danger","Error"))})).catch((e=>{o.innerHTML='<i class="bi-exclamation-circle text-danger" data-bs-toggle="tooltip" title="Reset failed"></i>',s(),"function"==typeof showToast&&showToast("Error resetting backup codes","danger","Error")}))}(o,e.target.closest(".backup-codes-cell, .backup-codes-cell-mobile"))}})))}));