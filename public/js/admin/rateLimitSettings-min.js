document.addEventListener("DOMContentLoaded",(function(){const e=document.querySelector(".container[data-messages-save-success]"),t={saveSuccess:e?.dataset.messagesSaveSuccess||"Einstellungen gespeichert",saveError:e?.dataset.messagesSaveError||"Fehler beim Speichern",resetConfirm:e?.dataset.messagesResetConfirm||"Wirklich zurÃ¼cksetzen?",testStarted:e?.dataset.messagesTestStarted||"Test gestartet",loadError:e?.dataset.messagesLoadError||"Fehler beim Laden"},n=document.getElementById("rateLimitForm"),s=document.getElementById("enableRateLimit"),a=document.getElementById("resetToDefaults"),i=document.getElementById("testLimits"),o=document.getElementById("liveStatus"),c=new bootstrap.Toast(document.getElementById("successToast")),l=new bootstrap.Toast(document.getElementById("errorToast"));let r=null;const d={login:{requests:5,window:300},register:{requests:3,window:3600},"2fa":{requests:10,window:300},"forgot-password":{requests:3,window:3600},"reset-password":{requests:5,window:3600},admin:{requests:50,window:3600},global:{requests:500,window:3600}};function u(e){const t=document.getElementById("successMessage");t&&(t.textContent=e,c.show())}function m(e){const t=document.getElementById("errorMessage");t&&(t.textContent=e,l.show())}function v(){const e=s?.checked,t=n?.querySelectorAll("input:not(#enableRateLimit), select, button");t?.forEach((t=>{"enableRateLimit"!==t.id&&(t.disabled=!e)}));const a=n?.querySelector(".card-body");a&&(a.style.opacity=e?"1":"0.5"),g(new Event("submit"))}async function g(e){e.preventDefault();const s=document.getElementById("csrfToken");if(!s||!s.value)return void m("CSRF Token nicht gefunden!");const a=s.value,i=new FormData(n),c={};for(let[e,t]of i.entries())if(e.includes("[")&&e.includes("]")){const n=e.match(/(\w+)\[(\w+)\](?:\[(\w+)\])?/);if(n){const[,s,a,i]=n;c[s]||(c[s]={}),i?(c[s][a]||(c[s][a]={}),c[s][a][i]=isNaN(t)?t:parseInt(t)):c[s][a]=e.includes("log_violations")?"on"===t:isNaN(t)?t:parseInt(t)}}else c[e]="enabled"===e||t;const l={"Content-Type":"application/json","X-Requested-With":"XMLHttpRequest","X-CSRF-Token":a};try{const e=await fetch("/admin/rate-limits/update",{method:"POST",headers:l,body:JSON.stringify(c)}),n=await e.json();if(!n.success)throw new Error(n.message||t.saveError);u(t.saveSuccess),o?.classList.contains("show")&&f()}catch(e){m(t.saveError)}}function w(){if(confirm(t.resetConfirm)){Object.entries(d).forEach((([e,t])=>{const s=n?.querySelector(`input[name="limits[${e}][requests]"]`),a=n?.querySelector(`input[name="limits[${e}][window]"]`);s&&(s.value=t.requests),a&&(a.value=t.window)}));const e=document.getElementById("maxViolations"),t=document.getElementById("cleanupInterval"),s=document.getElementById("logViolations");e&&(e.value=10),t&&(t.value=3600),s&&(s.checked=!0),u("Settings reset to defaults")}}async function b(){u(t.testStarted);const e=["/login","/register","/admin/settings"],n=[];for(const t of e)try{const e=await fetch(t,{method:"HEAD",headers:{"X-Test-Request":"true"}});n.push(`${t}: ${e.status}`)}catch(e){n.push(`${t}: Error`)}o?.classList.contains("show")&&f()}function h(){f(),r=setInterval(f,5e3)}function p(){r&&(clearInterval(r),r=null)}async function f(){const e=document.getElementById("liveStatusContent");if(e)try{const e=await fetch("/admin/rate-limits/status"),t=await e.json();if(!t)throw new Error("No data received");!function(e){const t=document.getElementById("liveStatusContent");if(!t)return;let n=`\n      <div class="row mb-3">\n        <div class="col-md-12">\n          <h6>Current Status: \n            <span class="badge bg-${e.enabled?"success":"warning"}">\n              ${e.enabled?"Enabled":"Disabled"}\n            </span>\n          </h6>\n        </div>\n      </div>\n      \n      <div class="row">\n        <div class="col-md-6">\n          <h6><span class="bi bi-activity"></span> Active Limits</h6>\n          <div class="table-responsive">\n            <table class="table table-sm">\n              <thead>\n                <tr>\n                  <th>Type</th>\n                  <th>Current</th>\n                  <th>Max</th>\n                  <th>Status</th>\n                </tr>\n              </thead>\n              <tbody>\n    `;e.active_limits&&e.active_limits.length>0?e.active_limits.forEach((e=>{const t=e.max_requests>0?e.requests/e.max_requests*100:0,s=t>80?"danger":t>60?"warning":"success";n+=`\n          <tr>\n            <td><small>${e.type}</small></td>\n            <td>${e.requests||0}</td>\n            <td>${e.max_requests||"-"}</td>\n            <td>\n              <span class="badge bg-${s}">\n                ${Math.round(t)}%\n              </span>\n            </td>\n          </tr>\n        `})):n+='\n        <tr>\n          <td colspan="4" class="text-center text-muted">\n            <small>No active limits found</small>\n          </td>\n        </tr>\n      ';n+='\n              </tbody>\n            </table>\n          </div>\n        </div>\n        <div class="col-md-6">\n          <h6><span class="bi bi-exclamation-triangle"></span> Recent Violations</h6>\n          <div class="list-group list-group-flush">\n    ',e.recent_violations&&e.recent_violations.length>0?e.recent_violations.slice(0,5).forEach((e=>{n+=`\n          <div class="list-group-item list-group-item-action py-2">\n            <div class="d-flex justify-content-between align-items-center">\n              <div>\n                <small class="text-muted">${e.timestamp||"Unknown time"}</small>\n                <br>\n                <span class="badge bg-secondary">${e.type||"Unknown"}</span>\n              </div>\n              <small class="text-muted">${e.identifier?e.identifier.substring(0,8)+"...":"Unknown"}</small>\n            </div>\n          </div>\n        `})):n+='\n        <div class="list-group-item text-center text-muted">\n          <span class="bi bi-info-circle"></span>\n          <p class="mb-0">No recent violations</p>\n        </div>\n      ';n+=`\n          </div>\n        </div>\n      </div>\n      \n      <div class="row mt-3">\n        <div class="col-md-12">\n          <div class="d-flex justify-content-between align-items-center">\n            <small class="text-muted">\n              Last updated: ${(new Date).toLocaleTimeString()}\n            </small>\n            <button type="button" class="btn btn-sm btn-outline-primary" onclick="loadLiveStatus()">\n              <span class="bi bi-arrow-clockwise"></span> Refresh\n            </button>\n          </div>\n        </div>\n      </div>\n    `,t.innerHTML=n}(t)}catch(n){e.innerHTML=`\n        <div class="alert alert-warning">\n          <span class="bi bi-exclamation-triangle"></span>\n          ${t.loadError}\n        </div>\n      `}}v(),s?.addEventListener("change",v),n?.addEventListener("submit",g),a?.addEventListener("click",w),i?.addEventListener("click",b),o&&(o.addEventListener("shown.bs.collapse",h),o.addEventListener("hidden.bs.collapse",p),o.classList.contains("show")&&f()),window.loadLiveStatus=f}));