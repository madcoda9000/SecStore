name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch: # Allows manual triggering

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.3', '8.4']
    
    name: PHP ${{ matrix.php-version }} Tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: curl, json, openssl, pdo, pdo_mysql, xml, zip, bcmath, gd, mbstring, soap, intl, ldap
        coverage: xdebug
        tools: composer:v2
    
    - name: Validate composer.json
      run: composer validate --strict
    
    - name: Get Composer Cache Directory
      id: composer-cache
      run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
    
    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: ${{ steps.composer-cache.outputs.dir }}
        key: ${{ runner.os }}-php-${{ matrix.php-version }}-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-${{ matrix.php-version }}-
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction
    
    - name: Create test directories
      run: |
        mkdir -p tests/reports
        mkdir -p coverage
    
    - name: Run test suite
      run: composer test
    
    - name: Generate coverage report
      if: matrix.php-version == '8.4'
      run: vendor/bin/phpunit --coverage-clover coverage.xml --coverage-text
    
    - name: Upload coverage to Codecov
      if: matrix.php-version == '8.4'
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        token: ${{ secrets.CODECOV_TOKEN }}
    
    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-php-${{ matrix.php-version }}
        path: tests/reports/
        retention-days: 7

  code-quality:
    runs-on: ubuntu-latest
    name: Code Quality
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        tools: composer:v2, phpcs, php-cs-fixer
    
    - name: Install dependencies
      run: composer install --prefer-dist --no-progress
    
    - name: Run PHP CodeSniffer
      run: vendor/bin/phpcs --standard=PSR12 app/ --report=full || true
      continue-on-error: true
    
    - name: Run PHP-CS-Fixer (dry-run)
      run: vendor/bin/php-cs-fixer fix --dry-run --diff --verbose || true
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    name: Security Audit
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        tools: composer:v2
    
    - name: Security audit
      run: composer audit || true
      continue-on-error: true